package com.ufcg.les;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.ArrayList;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import android.util.Log;


public class JSONParse {
	protected URL feedUrl;
	private JSONArray json;
	private static final String NOME = "nome";
	private static final String TEMPO = "tempo";
	private static final String DATA = "data";
	private static final String FOTO = "foto";
	private static final String PRIORIDADE = "prioridade";

	
	public JSONParse(String feedUrl) {
		try {
			this.feedUrl = new URL(feedUrl);
			JSON();
		} catch (MalformedURLException e) {
		}
	}

	private void JSON() {
		try {
			String jsonString = convertStreamToString(feedUrl.openConnection().getInputStream());
			json = new JSONArray(jsonString);
		} catch (JSONException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}
		
	}
	
	private String convertStreamToString(final InputStream input) {

		final BufferedReader reader = new BufferedReader(new InputStreamReader(input));
		final StringBuilder sBuf = new StringBuilder();

		String line = null;
		try {
			while ((line = reader.readLine()) != null) {
				sBuf.append(line);
			}
		} catch (IOException e) {
		} finally {
			try {
				input.close();
			} catch (IOException e) {
			}
		}
		return sBuf.toString();
	}
	
	public ArrayList<Ti> TiPars() {
		ArrayList<Ti> Tis = new ArrayList<Ti>();
		
		for (int i = 0; i < json.length(); i++) {
			 JSONObject item;
			try {
				item = json.getJSONObject(i);
				Log.d("werton", "criou");
	            Tis.add(recuperaTi(item));
			} catch (JSONException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
            
		}
		
		return Tis;
	}
	
	private Ti recuperaTi(JSONObject item) throws JSONException {
        Object prioridade = item.get(PRIORIDADE);
        Integer prioInteger = (Integer) prioridade;
        Integer tempo = (Integer) item.get(TEMPO);
        String nome = item.getString(NOME);
        String foto = item.getString(FOTO);
        Long data = (Long) item.get(DATA);
        
        return new Ti(nome, tempo, data, foto, prioridade);
}

}
